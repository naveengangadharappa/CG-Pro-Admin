{"version":3,"sources":["../node_modules/react-bootstrap/es/Row.js","../node_modules/react-nvd3/dist/react-nvd3.min.js","../node_modules/d3/d3.js","../node_modules/nvd3/build/nv.d3.js","../node_modules/react-bootstrap/es/CardContext.js","../node_modules/react-bootstrap/es/Col.js","../node_modules/react-bootstrap/es/utils/divWithClassName.js","../node_modules/react-bootstrap/es/CardImg.js","../node_modules/react-bootstrap/es/Card.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","n","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","Row","_React$Component","apply","this","arguments","Object","prototype","render","_this$props","props","bsPrefix","noGutters","Component","as","className","a","createElement","defaultProps","__webpack_exports__","t","e","module","exports","r","o","id","loaded","call","m","c","p","__esModule","default","defineProperty","value","i","u","s","f","l","d","h","y","v","b","g","_","x","O","j","w","S","P","F","key","addGraph","renderChart","bind","isCallable","ready","resizeHandler","clear","chart","rendering","models","type","renderStart","parsedProps","bindFunctions","context","getValueFunction","margin","options","pick","propsByPrefix","configureComponents","concat","without","configure","selection","select","refs","svg","datum","utils","windowResize","update","pie","dispatch","lines","renderEnd","on","isPlainObject","chartOptions","containerStyle","ref","style","length","hasOwnProperty","assign","G","B","W","_e","Function","window","Math","self","__g","version","__e","TypeError","Symbol","split","forEach","keys","join","getKeys","getSymbols","isEnum","create","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertyNames","getOwnPropertySymbols","each","toString","slice","enumerable","configurable","writable","ReferenceError","constructor","get","JSON","E","stringify","M","k","C","D","N","T","q","z","_k","set","A","V","H","I","push","J","R","U","for","keyFor","useSetter","useSimple","_e2","random","Array","isArray","__proto__","setPrototypeOf","check","indexOf","includes","negate","filterObject","name","console","warn","reduce","substr","replace","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","d3_arraySlice","d3_array","list","d3_document","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","max","extent","sum","mean","quantile","values","floor","median","numbers","sort","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","range","start","stop","step","Infinity","Error","d3_range_integerScale","object","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","event","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","enter","exit","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","padding","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","L","Z","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","nv","dev","tooltip","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","render_start","renderLoop","graph","generate","render_end","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","classes","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","state","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","DEVICE_SIZES","Col","spans","brkPoint","propValue","_propValue$span","infix","divWithClassName","react_default","forwardRef","esm_extends","classnames_default","CardImg_CardImg","CardImg","inheritsLoose","variant","objectWithoutPropertiesLoose","baseClass","es_CardImg","ThemeProvider","CardBody","createWithBsPrefix","Card_Card","Card","_this","_len","_key","getDerivedStateFromProps","_ref","cardContext","cardHeaderBsPrefix","CardContext","Provider","DivStyledAsH5","DivStyledAsH6","DecoratedCard","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"mappings":"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","file":"static/js/18.546a7770.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        noGutters = _this$props.noGutters,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, noGutters && 'no-gutters')\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.defaultProps = {\n  as: 'div',\n  noGutters: false\n};\nexport default createBootstrapComponent(Row, 'row');","!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\"]);\n\n    var spans = [];\n    var classes = [];\n    DEVICE_SIZES.forEach(function (brkPoint) {\n      var propValue = props[brkPoint];\n      delete props[brkPoint];\n      var span, offset, order;\n\n      if (propValue != null && typeof propValue === 'object') {\n        var _propValue$span = propValue.span;\n        span = _propValue$span === void 0 ? true : _propValue$span;\n        offset = propValue.offset;\n        order = propValue.order;\n      } else {\n        span = propValue;\n      }\n\n      var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n      if (span != null) spans.push(span === true ? \"\" + bsPrefix + infix : \"\" + bsPrefix + infix + \"-\" + span);\n      if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n      if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n    });\n\n    if (!spans.length) {\n      spans.push(bsPrefix); // plain 'col'\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames.apply(void 0, [className].concat(spans, classes))\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.defaultProps = {\n  as: 'div'\n};\nexport default createBootstrapComponent(Col, 'col');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar CardImg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CardImg, _React$Component);\n\n  function CardImg() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = CardImg.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        variant = _this$props.variant,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n    var baseClass = variant ? bsPrefix + \"-\" + variant : bsPrefix;\n    return React.createElement(Component, _extends({\n      className: classNames(baseClass, className)\n    }, props));\n  };\n\n  return CardImg;\n}(React.Component);\n\nCardImg.defaultProps = {\n  as: 'img',\n  variant: null\n};\nexport default createBootstrapComponent(CardImg, 'card-img');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar CardBody = createWithBsPrefix('card-body');\n\nvar Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Card, _React$Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n    return _this;\n  }\n\n  Card.getDerivedStateFromProps = function getDerivedStateFromProps(_ref) {\n    var bsPrefix = _ref.bsPrefix;\n    return {\n      cardContext: {\n        cardHeaderBsPrefix: bsPrefix + \"-header\"\n      }\n    };\n  };\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        bg = _this$props.bg,\n        text = _this$props.text,\n        border = _this$props.border,\n        body = _this$props.body,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\", \"bg\", \"text\", \"border\", \"body\", \"children\"]);\n\n    var classes = classNames(className, bsPrefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border);\n    return React.createElement(CardContext.Provider, {\n      value: this.state.cardContext\n    }, React.createElement(Component, _extends({\n      className: classes\n    }, props), body ? React.createElement(CardBody, null, children) : children));\n  };\n\n  return Card;\n}(React.Component);\n\nCard.defaultProps = {\n  as: 'div',\n  body: false\n};\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar DecoratedCard = createBootstrapComponent(Card, 'card');\nDecoratedCard.Img = CardImg;\nDecoratedCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nDecoratedCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nDecoratedCard.Body = CardBody;\nDecoratedCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nDecoratedCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nDecoratedCard.Header = createWithBsPrefix('card-header');\nDecoratedCard.Footer = createWithBsPrefix('card-footer');\nDecoratedCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default DecoratedCard;"],"sourceRoot":""}